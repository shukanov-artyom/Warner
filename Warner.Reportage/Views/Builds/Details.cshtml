@using Warner.Reportage.ViewModels
@model BuildDetailsViewModel

@{
    ViewBag.Title = "Build warnings";
    int totalDynamic = Model.WarningsTotalCountCurrent - Model.WarningsTotalCountPrevious;
}

<h2>Build has @Model.WarningsTotalCountCurrent warnings (
    @if (totalDynamic < 0)
    {
        <span style="color: green;">↓@Math.Abs(totalDynamic)</span>
    }
    else
    {
        <span style="color: red;">↑@Math.Abs(totalDynamic)</span>
    })
</h2>

<div class="col-md-4">
    <h3>Warnings by count:</h3>
    <ul>
        @foreach (var v in Model.Summary.ToList().OrderByDescending(p => p.Value))
        {
            string warningType = v.Key;
            <li>
                <span>
                    @{ string link = new WarningLinkProvider(warningType).GetLink(); }
                    <a href="@link">@warningType</a>
                </span>
                <span>
                    @Model.Summary[warningType]
                </span>
            </li>
        }
    </ul>
</div>
<div class="col-md-8">
    <h3>Warnings movement:</h3>
    <ul>
        @foreach (var pair in Model.WarningMovements.OrderByDescending(b => Math.Abs(b.Value)))
        {
            string warningType = pair.Key;
            int warningMovement = pair.Value;
            int warningsCount = Model.Summary.ContainsKey(warningType) ? Model.Summary[warningType] : 0;
            <li>
                <div>
                    <span>
                        @{ string link = new WarningLinkProvider(warningType).GetLink(); }
                        <span><a href="@link">@warningType</a></span>
                        <span>:</span>
                        @if (warningMovement > 0)
                        {
                            <span style="color: red;">@String.Format($"+{warningMovement}")</span>
                        }
                        else if (warningMovement < 0)
                        {
                            <span style="color: green;">@String.Format($"{warningMovement}")</span>
                        }
                    </span>
                    <span>
                        now have @Html.ActionLink(warningsCount.ToString(), "DetailsForType", "Warnings", new { WarningType = warningType, Model.BuildId })
                    </span>
                </div>
            </li>
         }
    </ul>
</div>



